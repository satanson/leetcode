#include<list_serialize.hpp>
class Solution {
public:
	vector<vector<int>> permute(vector<int> &num) {
		int N=num.size();
		vector<int> invseq(N,0);
		vector<vector<int>> seqs;
		while(true){
			seqs.push_back(perm(invseq,num));
			int j=num.size()-1;
			while(j>=0 && invseq[j]==n-1-j)--j;
			if (j==-1)break;
			else{
				++invseq[j];
				while(++j<n)invseq[j]=0;
			}
		}
	}
	vector<int> perm(vector<int> seq,vector<int> num){
		vector<int> p;
		p.reserve(seq.size());
		for(int i=0;i<seq.size();i++){
			int j=seq[i];
			while(num[j]==-1)++i;
			p.push_back(num[j]);
			num[j]=-1;
		}
		return p;
	}
	
};

int main(){

}
